body {
  font-family: Roboto, sans-serif;
  font-size: 16px;
  margin: 0; }

h1 {
  font-family: shrikhand, cursive; }

.fa-heart:hover {
  transition: 1s ease-in-out;
  background: -webkit-linear-gradient(249deg, #9356DC 30%, #ff79da 80%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  font-size: xx-large;
  font-weight: 800; }

section.search {
  display: flex;
  padding: 0.5em;
  justify-content: center;
  background: linear-gradient(#8080803d, 10%, #ecf0f1); }

.map {
  width: 40px;
  height: 36px;
  border: none;
  text-align: center;
  color: black;
  cursor: pointer;
  font-size: 15px;
  background: none; }

.searchTerm {
  width: 110%;
  padding: 7px;
  height: 20px;
  outline: none;
  font-weight: bolder;
  background: none;
  border: none; }

section.explo {
  text-align: center;
  padding: 2rem;
  background: #f3f3f369; }

button.explo_btn {
  border-radius: 50px;
  align-items: center;
  height: 55px;
  border: none;
  font-weight: bold;
  font-family: Roboto, sans-serif;
  outline: none;
  width: 200px;
  cursor: pointer;
  color: white;
  box-shadow: 0px 1px 6px 3px #c4c2c2;
  background: linear-gradient(182deg, #ff79da, 50%, #9356DC); }
  button.explo_btn:hover {
    background: linear-gradient(182deg, #ae80e5, 50%, #ff60d3);
    transform: perspective(1300px) scale(1.03);
    transform-origin: 50% center;
    transition: 1s ease-in-out;
    box-shadow: 0px 1px 6px 3px #919191; }

section.fonction {
  display: flex;
  flex-wrap: wrap;
  padding: 1em;
  flex-direction: column;
  justify-content: space-around;
  align-content: flex-start;
  align-items: flex-start; }
  @media screen and (min-width: 1024px) {
    section.fonction {
      padding: 1em;
      flex-direction: row;
      align-items: baseline;
      justify-content: center; } }
  section.fonction i {
    color: #727171; }

ol.number {
  padding: 0 16px 0 16px; }
  @media screen and (min-width: 1024px) {
    ol.number {
      display: flex; } }
  ol.number li {
    counter-increment: li;
    display: grid;
    grid-template-columns: 2rem 2rem auto;
    border-radius: 20px;
    align-items: center;
    height: 70px;
    background-color: #f9f9f9;
    box-shadow: 0px 1px 6px 3px #f2f2f2;
    font-weight: bolder;
    width: 325px;
    margin-bottom: 1em;
    cursor: pointer; }
    @media screen and (min-width: 768px) {
      ol.number li {
        margin-right: 10rem; } }
    @media screen and (min-width: 1024px) {
      ol.number li {
        margin-right: 0.5rem;
        margin-left: 1rem;
        width: 280px; } }
    ol.number li::before {
      content: counter(li);
      display: flex;
      width: 2rem;
      height: 2rem;
      color: white;
      background-color: #9356DC;
      border-radius: 50%;
      justify-content: center;
      align-items: center;
      margin-left: -1rem; }
  ol.number li:hover {
    background: #efe4fd; }
    ol.number li:hover i {
      color: #9356DC; }

section.restaurant {
  padding: 1em 1.5em;
  background: #f3f3f3; }
  @media screen and (min-width: 768px) {
    section.restaurant {
      display: grid;
      grid-template-areas: "titre titre" "resto1 resto2" "resto3 resto4";
      grid-gap: 1rem; } }
  section.restaurant h2 {
    grid-area: titre; }

h2 {
  font-weight: bold; }

a {
  text-decoration: none;
  color: black; }

img {
  width: 100%;
  height: 200px;
  -o-object-fit: cover;
  object-fit: cover; }
  @media screen and (min-width: 768px) {
    img {
      height: 400px; } }

main.menu {
  background-color: #f3f3f3;
  margin-top: -2rem;
  border-radius: 2rem 2rem 0 0;
  position: relative;
  padding: 0.5em; }

section.entete {
  display: grid;
  grid-template-columns: 80% 20%;
  grid-template-areas: "nom coeur"; }
  section.entete .fa-heart {
    grid-area: coeur;
    align-items: center;
    font-size: x-large;
    display: flex;
    justify-content: space-around; }
  section.entete h1.nom {
    margin-left: 5px;
    font-size: 29px; }

h2.menu {
  margin-left: 5px;
  font-weight: 200; }

h2.menu::after {
  background: #99E2D0;
  display: block;
  width: 3rem;
  height: 2px;
  content: ""; }

.cmd {
  text-align: center;
  grid-area: cmd; }

@media screen and (min-width: 768px) {
  .carte {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr 1fr auto;
    -moz-column-gap: 40px;
    column-gap: 40px;
    width: 46.25rem;
    margin: auto;
    grid-template-areas: "entrees plats" "desserts ." "cmd cmd"; }
  section:nth-of-type(1) {
    grid-area: entrees; }
  section:nth-of-type(2) {
    grid-area: plats; }
  section:nth-of-type(3) {
    grid-area: desserts; } }

@media screen and (min-width: 1025px) {
  .carte {
    grid-template-columns: 1fr 1fr 1fr; } }

footer {
  display: grid;
  grid-template-columns: 10% 90%;
  grid-template-rows: 35px 30px 30px 30px 30px;
  grid-template-areas: "logo logo" "ustensiles resto" "hands partner" "ml ml" "mail mail";
  background-color: #353535;
  color: white;
  padding: 1rem 1rem 2rem 1rem;
  align-items: center; }
  @media screen and (min-width: 768px) {
    footer {
      display: flex;
      flex-direction: row;
      justify-content: space-evenly; } }
  @media screen and (min-width: 1024px) {
    footer {
      display: flex;
      flex-direction: column;
      padding: 0; } }
  footer .footer_logo {
    font-family: shrikhand, cursive;
    grid-area: logo;
    margin: 0; }
    @media screen and (min-width: 768px) {
      footer .footer_logo {
        margin: 16px; } }
  footer .fa-utensils {
    grid-area: ustensiles; }
  footer .resto {
    grid-area: resto; }
  footer .fa-hands-helping {
    grid-area: hands; }
  footer .partner {
    grid-area: partner; }
  footer .ml {
    grid-area: ml; }
  footer .mail {
    grid-area: mail;
    color: white;
    text-decoration: none; }

header {
  display: grid;
  grid-template-areas: "retour logo .";
  grid-template-columns: 1fr auto 1fr; }
  header a {
    display: flex;
    justify-content: center;
    align-items: center;
    grid-area: retour;
    font-size: x-large; }
  header .header_logo {
    grid-area: logo;
    font-family: shrikhand, cursive; }

#container {
  display: flex;
  align-items: center;
  justify-content: center;
  position: fixed;
  height: 100%;
  width: 100%;
  left: 0;
  top: 0;
  overflow: hidden;
  -webkit-animation: load 3s forwards;
  animation: load 3s forwards;
  background-color: white; }
  #container .loader {
    position: relative;
    width: 120px;
    height: 120px;
    font-size: 24px;
    color: #9356DC;
    letter-spacing: 2px;
    display: flex;
    align-items: center;
    justify-content: center;
    -webkit-animation: rotation 3s forwards;
    animation: rotation 3s forwards; }
    #container .loader:after {
      content: '';
      position: absolute;
      top: -40px;
      left: -40px;
      right: -40px;
      bottom: -40px;
      border-radius: 50%;
      border-top: 12px solid #ff79da;
      border-right: 12px solid #9356DC;
      border-bottom: 12px solid #99E2D0;
      border-left: 12px solid #9356DC; }
  #container i {
    font-size: xx-large; }

@-webkit-keyframes load {
  0% {
    height: 100%; }
  99.9% {
    height: 100%; }
  100% {
    height: 0; } }

@keyframes load {
  0% {
    height: 100%; }
  99.9% {
    height: 100%; }
  100% {
    height: 0; } }

@-webkit-keyframes rotation {
  0% {
    transform: rotate(0deg); }
  100% {
    transform: rotate(360deg); } }

@keyframes rotation {
  0% {
    transform: rotate(0deg); }
  100% {
    transform: rotate(360deg); } }

article {
  display: grid;
  grid-template-columns: 80% 20%;
  grid-template-areas: "photo photo" "nom coeur" "ville .";
  background-color: white;
  border-radius: 1rem;
  box-shadow: 2px 2px 5px 2px #dad8d8;
  margin-bottom: 10px;
  max-width: 335px;
  text-decoration: none;
  cursor: pointer; }
  @media screen and (min-width: 768px) {
    article {
      max-width: 815px; } }
  article img {
    width: 100%;
    height: 200px;
    grid-area: photo;
    -o-object-fit: cover;
    object-fit: cover;
    border-top-left-radius: 1rem;
    border-top-right-radius: 1rem; }
  article h3 {
    grid-area: nom;
    margin-top: 7px;
    margin-bottom: 7px;
    margin-left: 7px; }
  article p {
    grid-area: ville;
    margin-top: 0;
    margin-bottom: 7px;
    margin-left: 7px; }
  article .fa-heart {
    font-family: 'Font Awesome 5 Free';
    content: "f004";
    grid-area: coeur;
    font-size: x-large;
    align-items: flex-end;
    display: flex;
    justify-content: space-around; }
  article.nouveau::after {
    content: "Nouveau";
    font-weight: bold;
    color: #008766;
    background: #99E2D0;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 5rem;
    margin-top: -13rem;
    height: 2rem;
    margin-left: -2rem; }

article.plat {
  display: flex;
  opacity: 0;
  -webkit-animation: fondu 1s forwards;
  animation: fondu 1s forwards;
  max-width: 350px; }
  article.plat:nth-of-type(1) {
    -webkit-animation-delay: 0s;
    animation-delay: 0s; }
  article.plat:nth-of-type(2) {
    -webkit-animation-delay: 0.4s;
    animation-delay: 0.4s; }
  article.plat:nth-of-type(3) {
    -webkit-animation-delay: 0.8s;
    animation-delay: 0.8s; }
  article.plat:nth-of-type(4) {
    -webkit-animation-delay: 1.2s;
    animation-delay: 1.2s; }
  article.plat:nth-of-type(5) {
    -webkit-animation-delay: 1.6s;
    animation-delay: 1.6s; }
  article.plat div {
    text-align: initial;
    transition: width 1s;
    width: calc(100% - 3rem); }
    article.plat div * {
      white-space: nowrap;
      text-overflow: ellipsis;
      overflow: hidden;
      width: 100%; }
  article.plat aside {
    font-weight: bold;
    display: flex;
    justify-content: center;
    align-items: flex-end;
    height: 3.6rem;
    width: 3.6rem; }
  article.plat i {
    transition: width 1s;
    width: 0;
    overflow: hidden;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: #99E2D0;
    border-top-right-radius: 1rem;
    border-bottom-right-radius: 1rem;
    color: white; }
  article.plat:hover i {
    width: 4.5rem; }
  article.plat:hover div {
    width: calc(100% - 7.6rem); }
  article.plat:hover .fa-check-circle:before {
    -webkit-animation: three 1s forwards;
    animation: three 1s forwards;
    -webkit-animation-direction: alternate;
    animation-direction: alternate; }

@-webkit-keyframes three {
  0% {
    transform: rotate(90deg); }
  100% {
    transform: rotate(0deg); } }

@keyframes three {
  0% {
    transform: rotate(90deg); }
  100% {
    transform: rotate(0deg); } }

@-webkit-keyframes fondu {
  from {
    opacity: 0;
    margin-top: 3rem; }
  to {
    opacity: 1;
    margin-top: 0; } }

@keyframes fondu {
  from {
    opacity: 0;
    margin-top: 3rem; }
  to {
    opacity: 1;
    margin-top: 0; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
